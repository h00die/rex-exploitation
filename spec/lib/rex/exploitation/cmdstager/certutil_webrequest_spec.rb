# -*- coding:binary -*-

require 'spec_helper'

require 'rex/exploitation/cmdstager'

RSpec.describe Rex::Exploitation::CmdStagerCertutilWebRequest do
  let(:exe) { 'MZ' }

  subject(:cmd_stager) do
    described_class.new(exe)
  end

  describe '#http?' do
    it 'returns true' do
      expect(cmd_stager.http?)
    end
  end

  describe '#user_agent' do
    it 'returns a known user agent match' do
      expect(cmd_stager.user_agent).to be_kind_of(Regexp)
    end
  end

  describe '#cmd_concat_operator' do
    it 'returns &' do
      expect(cmd_stager.cmd_concat_operator).to eq(' & ')
    end
  end

  describe '#generate' do
    it 'raises when missing :payload_uri' do
      expect { cmd_stager.generate }.to raise_error(StandardError)
    end

    it 'returns an array of commands' do
      result = cmd_stager.generate(payload_uri: "http://127.0.0.1/#{Rex::Text.rand_text_alphanumeric(10)}")

      expect(result).to be_kind_of(Array)
      expect(result).to_not be_empty
    end
  end

  describe '#generate_nodelete' do
    it 'returns an array of commands without del' do
      result = cmd_stager.generate(
        payload_uri: "http://127.0.0.1/#{Rex::Text.rand_text_alphanumeric(10)}",
        nodelete: true
      )

      expect(result).to be_kind_of(Array)
      expect(result).to_not be_empty

      for command in result
        expect(command).to_not include('del ')
      end
    end
  end
end
